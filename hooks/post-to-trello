#!/usr/bin/env node

// Based on: https://gist.github.com/mashihua/2952814

//please requist your app token from
//https://trello.com/1/connect?key=yourkey&name=git-hook&expiration=never&response_type=token&scope=read,write

var key = "<INSERT_KEY_HERE>";
var token = "<INSERT_TOKEN_HERE>";
var repo_link = "http://gitlab.example.com/group/repo_name"
var board_id = "<INSERT_BOARD_ID>"
var Trello = require("node-trello");
var t = new Trello(key, token);
var spawn = require('child_process').spawn;
var git = spawn('git', ['log' , '-1' , 'HEAD']);
var data = "";

git.stdout.on('data',function(d){
  data += d;
});

git.on('exit', function(){
  var m = data.match(/#\s?[0-9]+/g);
  if(!m){
    // JS Regex is stupid
    m = data.match(/#[0-9]+/g);
  }

  var merge = data.match(/Merge/i);
  if(merge){
    console.log('Ignoring merge commit');
    return;
  }
  
  if(m){
    var commit = data.match(/commit\s+(.+)/i)[1];
    var commit_link = repo_link + "/commit/" + commit;
    var author = data.match(/author:\s+([^<]+)/i)[1];
    var date = data.match(/date:\s+(.+)/i)[1];  
    var lines = data.split('\n');
    var msg = "";
    for(var i = 4;i < lines.length;i++){
		  msg += lines[i].trim() + "\n";
    }
    var cardNumber = m[0].replace(/#\s?/g, '').trim();
    console.log("CardNumber : " + cardNumber);
    //get card
    get_card(board_id, cardNumber,function(err, data){
      if(err) warn("[ERROR] Cannot find card matching ID " + cardNumber);
      else{
	      var text = 'Commit by : '+ author + '\nDate : ' + date + '\nCommit : ['+ commit + '](' + commit_link + ')\nMessage : ' + msg 
	      add_comment(data['id'], text, function (err,data){
	        if(err) throw err;
	        else info('Submit message for ' + cardNumber + " : \n" + data.data.text);
	      });
      }
    });
  }else{
    console.log('No trello cards mentioned');
  }
});

var partition = "***************************************************************************";
function info(msg){
  console.log(partition);
  console.log(msg);
  console.log(partition);
}

function warn(msg){
  console.warn(partition);
  console.warn(msg);
  console.warn(partition);
}

function logfun(err, data){
  if(err) throw err;
  console.log(data);
}
function get_card(board_id, card_id, fun){
  fun = fun || logfun;
  t.get("/1/boards/"+ board_id +"/cards/"+card_id, fun);
}

function update_card(card_id, params, fun){
  fun = fun || logfun;
  t.put("/1/cards/"+card_id, params, fun);
}

function add_comment(card_id, comment, fun ){
  fun = fun || logfun;
  t.post("/1/card/"+card_id+ "/actions/comments", {text: comment}, fun);
}

function get_cards(list_id, fun){
  fun = fun || logfun;
  t.get("/1/lists/"+list_id+"/cards", {fields: "idList,closed,name"}, fun)
}
